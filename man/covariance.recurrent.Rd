% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/recurrent.marginal.R
\name{covariance.recurrent}
\alias{covariance.recurrent}
\title{Estimation of covariance for bivariate recurrent events with terminal event}
\usage{
\method{covariance}{recurrent}(data, type1, type2, status = "status",
  death = "death", entry = "entry", time = "time", id = "id",
  names.count = "Count")
}
\arguments{
\item{data}{data-frame}

\item{status}{name of status}

\item{death}{name of death indicator}

\item{id}{id}

\item{type}{type of evnent (code) related to status}

\item{start}{start stop call of Hist() of prodlim}

\item{stop}{start stop call of Hist() of prodlim}

\item{times}{time at which to get probabilites P(N1(t) >= n)}

\item{exceed}{n's for which which to compute probabilites P(N1(t) >= n)}

\item{max.recurrent}{limits number recurrent events to 100}

\item{...}{Additional arguments to lower level funtions}
}
\description{
Estimation of probability of more that k events for recurrent events process
where there is terminal event
}
\examples{

########################################
## getting some data to work on 
########################################

data(base1cumhaz)
data(base4cumhaz)
data(drcumhaz)
dr <- drcumhaz
base1 <- base1cumhaz
base4 <- base4cumhaz

rr <- mets::sim.recurrent(1000,base1,cumhaz2=base4,death.cumhaz=dr)
rr$strata <- 1
dtable(rr,~death+status)

covrp <- mets::covariance.recurrent(rr,1,status="status",death="death",start="entry",stop="time",id="id")
mets::plot.covariance.recurrent(covrp)

covrpS <- mets::covariance.recurrentS(rr,1,status="status",death="death",start="entry",stop="time",id="id",strata="strata")

}
\author{
Thomas Scheike
}

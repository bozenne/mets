% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/recurrent.marginal.R
\name{recurrent.marginal}
\alias{recurrent.marginal}
\title{Fast recurrent marginal mean when death is possible}
\usage{
recurrent.marginal(recurrent, death, fixbeta = NULL, ...)
}
\arguments{
\item{recurrent}{phreg object with recurrent events}

\item{death}{phreg object with deaths}

\item{fixbeta}{to force the estimation of standard errors to think of regression coefficients as known/fixed}

\item{...}{Additional arguments to lower level funtions}
}
\description{
Fast Marginal means of recurrent events. Using the Lin and Ghosh (2000) 
standard errors.  
Fitting two models for death and recurent events these are
combined to prducte the estimator 
\deqn{ \int_0^t  S(u|x=0) dR(u|x=0) } the mean number of recurrent events, here
\deqn{ S(u|x=0) }  is the probability of survival for the baseline group, and 
\deqn{ dR(u|x=0) }  is the hazard rate of an event among survivors for the baseline. 
Here \deqn{ S(u|x=0) }  is estimated by \deqn{ exp(-\Lambda_d(u|x=0) }  with 
 \deqn{\Lambda_d(u|x=0) } being the cumulative baseline for death.
}
\details{
Assumes no ties so break ties before running with for example strata, use tie.breaker function.
}
\examples{

data(simrecurrent)
##  to fit non-parametric models with just a baseline 
xr <- phreg(Surv(start,stop,status)~cluster(id),data=simd)
dr <- phreg(Surv(start,stop,death)~cluster(id),data=simd)
par(mfrow=c(1,3))
basehazplot.phreg(dr,se=TRUE)
title(main="death")
basehazplot.phreg(xr,se=TRUE)
### robust standard errors 
rxr <-   robust.phreg(xr,fixbeta=1)
basehazplot.phreg(rxr,se=TRUE,robust=TRUE,add=TRUE,col=4)

## marginal mean of expected number of recurrent events 
out <- recurrent.marginal(xr,dr)
basehazplot.phreg(out,se=TRUE,ylab="marginal mean",col=2)

########################################################################
###   with strata     ##################################################
########################################################################
xr <- phreg(Surv(start,stop,status)~strata(x.V1)+cluster(id),data=simd)
dr <- phreg(Surv(start,stop,death)~strata(x.V1)+cluster(id),data=simd)
par(mfrow=c(1,3))
basehazplot.phreg(dr,se=TRUE)
title(main="death")
basehazplot.phreg(xr,se=TRUE)
rxr <-   robust.phreg(xr,fixbeta=1)
basehazplot.phreg(rxr,se=TRUE,robust=TRUE,add=TRUE,col=1:2)

out <- recurrent.marginal(xr,dr)
basehazplot.phreg(out,se=TRUE,ylab="marginal mean",col=1:2)

########################################################################
###   cox case        ##################################################
########################################################################
xr <- phreg(Surv(start,stop,status)~x.V1+x.V2+cluster(id),data=simd)
dr <- phreg(Surv(start,stop,death)~x.V1+x.V2+cluster(id),data=simd)
par(mfrow=c(1,3))
basehazplot.phreg(dr,se=TRUE)
title(main="death")
basehazplot.phreg(xr,se=TRUE)
rxr <-   robust.phreg(xr)
basehazplot.phreg(rxr,se=TRUE,robust=TRUE,add=TRUE,col=1:2)

out <- recurrent.marginal(xr,dr)
basehazplot.phreg(out,se=TRUE,ylab="marginal mean",col=1:2)

\donttest{
### do not test to avoid dependence on frailtypack for data 
library(frailtypack)
data(readmission)
r <-  readmission
### breaking ties with respect to both event types 
r <-  transform(r,jump=(event==1) | (death==1))
r <- tie.breaker(r,stop="t.stop",start="t.start",status="jump")

## to fit non-parametric models with just a baseline 
xr <- phreg(Surv(t.start,t.stop,event)~cluster(id),data=r)
dr <- phreg(Surv(t.start,t.stop,death)~cluster(id),data=r)
par(mfrow=c(1,3))
basehazplot.phreg(dr,se=TRUE)
title(main="death")
basehazplot.phreg(xr,se=TRUE,xlim=c(0,2000))
### robust standard errors 
rxr <-   robust.phreg(xr)
basehazplot.phreg(rxr,se=TRUE,xlim=c(0,2000),robust=TRUE,add=TRUE,col=4)
title(main="recurrent")

## marginal mean of expected number of recurrent events 
out <- recurrent.marginal(xr,dr)
basehazplot.phreg(out,se=TRUE,ylab="marginal mean",col=2)
title(main="marginal mean ")

########################################################################
###   with strata     ##################################################
########################################################################
xr <- phreg(Surv(t.start,t.stop,event)~strata(chemo)+cluster(id),data=r)
dr <- phreg(Surv(t.start,t.stop,death)~strata(chemo)+cluster(id),data=r)
par(mfrow=c(1,3))
basehazplot.phreg(dr,se=TRUE)
title(main="death")
basehazplot.phreg(xr,se=TRUE,xlim=c(0,2000),ylim=c(0,3))
rxr <-   robust.phreg(xr,fixbeta=1)
basehazplot.phreg(rxr,se=TRUE,xlim=c(0,2000),robust=TRUE,add=TRUE,col=1:2)
title(main="recurrent")

out <- recurrent.marginal(xr,dr)
basehazplot.phreg(out,se=TRUE,ylab="marginal mean",col=1:2,xlim=c(0,2000),ylim=c(0,3))
title(main="marginal mean ")

########################################################################
###   cox case        ##################################################
########################################################################
xr <- phreg(Surv(t.start,t.stop,event)~chemo+charlson+cluster(id),data=r)
dr <- phreg(Surv(t.start,t.stop,death)~charlson+dukes+cluster(id),data=r)
par(mfrow=c(1,3))
basehazplot.phreg(dr,se=TRUE)
title(main="death")
basehazplot.phreg(xr,se=TRUE,xlim=c(0,2000),ylim=c(0,3))
rxr <-   robust.phreg(xr)
basehazplot.phreg(rxr,se=TRUE,xlim=c(0,2000),robust=TRUE,add=TRUE,col=1:2)
title(main="recurrent")

## for covariates equal to 0
out <- recurrent.marginal(xr,dr)
basehazplot.phreg(out,se=TRUE,ylab="marginal mean",col=1:2,xlim=c(0,2000),ylim=c(0,3))
title(main="marginal mean ")

}

########################################################################
###   CIF             ##################################################
########################################################################
### use of function to compute cumulative incidence (cif) with robust standard errors
data(bmt)
bmt$id <- 1:nrow(bmt)
xr  <- phreg(Surv(time,cause==1)~cluster(id),data=bmt)
dr  <- phreg(Surv(time,cause!=0)~cluster(id),data=bmt)

out <- recurrent.marginal(xr,dr)
basehazplot.phreg(out,se=TRUE,ylab="cumulative incidence")

}
\author{
Klaus K. Holst, Thomas Scheike
}
